demo()
clear
cls
setwd("P:/JupyterNotebooks/ML/R/Pre-processing")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
datset$Age)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes', 'Germany'),
labels = c(0, 1))
dataset$Purchased = factor(dataset$Country,
levels = c('No', 'Yes'),
labels = c(0, 1))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
# Get the dataset
dataset = read.csv('Data.csv')
# Missing data - replace with column averages
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
# Categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'
# Get the dataset
dataset = read.csv('Data.csv')
# Missing data - replace with column averages
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
# Categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain'),
labels = c(1, 2, 3))
# Get the dataset
dataset = read.csv('Data.csv')
# Missing data - replace with column averages
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
# Categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
# Splitting into training and test sets
# Feature Scaling
# Get the dataset
dataset = read.csv('Data.csv')
# Missing data - replace with column averages
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
# Categorical data
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
install.packages('catools')
install.packages('catools')
install.packages('caTools')
install.packages('caTools')
install.packages('caTools')
library(caTools)
library(caTools)
detach("package:caTools", unload = TRUE)
library(caTools)
split = sample.split(dataset$Purchased, 0.8)
split
set.seed(123) #just so the examples match
split = sample.split(dataset$Purchased, 0.8)
training_set = subset(datset, split == TRUE)
test_set = subset(datset, split == FALSE)
set.seed(123) #just so the examples match
split = sample.split(dataset$Purchased, 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set)
test_set[, 2:3] = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
setwd("P:/JupyterNotebooks/ML/R/Regression")
View(training_set)
dataset = read.csv('Salary_Data.csv')
# Splitting into training and test sets
library(caTools) #or check it in packages tab
set.seed(123) #just so the examples match
split = sample.split(dataset$Salary, 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Splitting into training and test sets
library(caTools) #or check it in packages tab
set.seed(123) #just so the examples match
split = sample.split(dataset$Salary, 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(test_set)
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color='red') +
geom_line(aes(x=training_set$YearsExperience), y=predict(regressor, newdata = training_set)))
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor, newdata = training_set)),
color-'blue')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor, newdata = training_set)),
color='blue')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
color='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor, newdata = training_set)),
color='blue') +
ggtitle('Salary vs. Experience (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
color='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor, newdata = training_set)),
color='blue') +
ggtitle('Salary vs. Experience (Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
dataset = read.csv('50_Startups.csv')
dataset = read.csv('50_Startups.csv')
# Splitting into training and test sets
library(caTools) #or check it in packages tab
set.seed(123) #just so the examples match
split = sample.split(dataset$Salary, 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(dataset)
# Categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting into training and test sets
library(caTools) #or check it in packages tab
set.seed(123) #just so the examples match
split = sample.split(dataset$Salary, 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Splitting into training and test sets
library(caTools) #or check it in packages tab
set.seed(123) #just so the examples match
split = sample.split(dataset$Profit, 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
regressor
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
